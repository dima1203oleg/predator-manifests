---
# Source: predator-umbrella/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: predator
  labels:
    app.kubernetes.io/name: predator-umbrella
    helm.sh/chart: predator-umbrella-0.1.0
    app.kubernetes.io/instance: predator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: predator
---
# Source: predator-umbrella/charts/api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: predator-api
  labels:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: predator
  ports:
    - name: http
      port: 8000
      targetPort: http
---
# Source: predator-umbrella/charts/frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: predator-frontend
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: predator
  ports:
    - name: http
      port: 80
      targetPort: http
---
# Source: predator-umbrella/charts/model-router/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: predator-model-router
  labels:
    app.kubernetes.io/name: model-router
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: model-router
    app.kubernetes.io/instance: predator
  ports:
    - name: http
      port: 8080
      targetPort: http
---
# Source: predator-umbrella/charts/agents/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: predator-agents
  labels:
    app.kubernetes.io/name: agents
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: agents
      app.kubernetes.io/instance: predator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agents
        app.kubernetes.io/instance: predator
    spec:
      containers:
        - name: agents
          image: docker.io/your-docker-repo/predator-analytics/predator/agents:auto-1761853193
          imagePullPolicy: IfNotPresent
          args: ["--mode=worker"]
          resources: {}
---
# Source: predator-umbrella/charts/api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: predator-api
  labels:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: api
      app.kubernetes.io/instance: predator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
        app.kubernetes.io/instance: predator
    spec:
      containers:
        - name: api
          image: docker.io/your-docker-repo/predator-analytics/predator/api:auto-1761853193
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20
          resources: {}
---
# Source: predator-umbrella/charts/celery/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: predator-celery
  labels:
    app.kubernetes.io/name: celery
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: celery
      app.kubernetes.io/instance: predator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: celery
        app.kubernetes.io/instance: predator
    spec:
      containers:
        - name: celery
          image: docker.io/your-docker-repo/predator-analytics/predator/celery:auto-1761853193
          imagePullPolicy: IfNotPresent
          env:
          resources: {}
---
# Source: predator-umbrella/charts/frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: predator-frontend
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/instance: predator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/instance: predator
    spec:
      containers:
        - name: frontend
          image: docker.io/your-docker-repo/predator-analytics/predator/frontend:auto-1761853193
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20
          resources: {}
---
# Source: predator-umbrella/charts/model-router/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: predator-model-router
  labels:
    app.kubernetes.io/name: model-router
    app.kubernetes.io/instance: predator
    app.kubernetes.io/part-of: predator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: model-router
      app.kubernetes.io/instance: predator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: model-router
        app.kubernetes.io/instance: predator
    spec:
      containers:
        - name: model-router
          image: docker.io/your-docker-repo/predator-analytics/predator/model-router:auto-1761853193
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20
          resources: {}
---
# Source: predator-umbrella/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: predator-predator-umbrella-ingress
  labels:
    app.kubernetes.io/name: predator-umbrella
    helm.sh/chart: predator-umbrella-0.1.0
    app.kubernetes.io/instance: predator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: predator
spec:
  ingressClassName: nginx
  rules:
    - host: "predator.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: predator-frontend
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: predator-api
                port:
                  number: 8000
